// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

model Product {
  id                      String          @id @default(uuid())
  name                    String
  priceInCents            Int
  filePath                String
  imagePath               String
  description             String
  isAvailableForPurchase  Boolean         @default(true)
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
  orders                  Order[]
  downloadVerifications   DownloadVerification[]
  ownerId                 String
  owner                   User            @relation(fields: [ownerId], references: [id], onDelete: Cascade) //If we delete a user, delete all products associated too
}

model User {
  id                      String          @id @default(uuid())
  username                String          @unique
  email                   String          @unique
  password                String
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
  orders                  Order[]
  products                Product[]
}

model Order {
  id                      String          @id @default(uuid())
  priceInCents            Int
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
  userId                  String
  productId               String
  user                    User            @relation(fields: [userId], references: [id], onDelete: Cascade) //If we delete a user, delete all purchases associated too
  product                 Product         @relation(fields: [productId], references: [id], onDelete: Restrict) //we cannot delete an object with other orders
}

model DownloadVerification {
  id                      String          @id @default(uuid())
  expiresAt               DateTime
  createdAt               DateTime        @default(now())
  productId               String
  product                 Product         @relation(fields: [productId], references: [id], onDelete: Cascade) //if we delete a product, delete all download links for it too
}